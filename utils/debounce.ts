type DebounceInput = {
  fn: Function;
  ms: number;
};

type ReturnFunction<T> = (...args: T[]) => void;

export const createDebouncedFunc = ({
  fn,
  ms = 500,
}: DebounceInput): ReturnFunction<number | string> => {
  let timeoutId: number | null = null;

  return (...args) => {
    if (typeof window === "undefined") return () => {};

    // will get cancelled
    if (timeoutId !== null) clearTimeout(timeoutId);

    timeoutId = window.setTimeout(async () => {
      fn(...args);
    }, ms);
  };
};
